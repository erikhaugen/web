<?xml version="1.0" encoding="UTF-8"?>
<web-app 
	id="WebApp_ID" version="2.4" 
	xmlns="http://java.sun.com/xml/ns/j2ee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

	<display-name>LS Community Service</display-name>
	
	<!--
	==========================================================================
		Context Parameters
	========================================================================== -->
	<context-param>
		<param-name>configClientClasses</param-name>
 		<param-value>com.livescribe.community.config.ConfigClient</param-value>
	</context-param>
 	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/classes/communityservice-context.xml</param-value>
	</context-param>
    <!-- 
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/classes/log4j.xml</param-value>
	</context-param>
    -->
    
	<!--
	==========================================================================
		Filters
	========================================================================== -->
    <filter>
    	<filter-name>utfFilter</filter-name>
    	<filter-class>com.livescribe.community.view.UTFResponseFilter</filter-class>
    </filter>
    
    <filter-mapping>
    	<filter-name>utfFilter</filter-name>
    	<url-pattern>/community/pencast/*</url-pattern>
    </filter-mapping>
<!-- 	
	<filter>
		<filter-name>securityFilter</filter-name>
		<filter-class>com.livescribe.community.filter.SecurityFilter</filter-class>
		<init-param>
			<param-name>secureUrls</param-name>
			<param-value>/community/pencast/user</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>securityFilter</filter-name>
		<url-pattern>/community/pencast/*</url-pattern>
	</filter-mapping>
 -->
 	<!-- Spring Security Filter Chain 	
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/community/pencast/*</url-pattern>
	</filter-mapping>
 -->	
	<!--
	==========================================================================
		Listeners
	========================================================================== -->
	<!-- 
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
    -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

<!-- 
    <listener>
        <listener-class>com.livescribe.web.utils.listener.LSServletContextListener</listener-class>
    </listener>
 -->
	<!--
	==========================================================================
		Servlets
	========================================================================== -->

	<!-- Spring Dispatcher Servlet -->
	<servlet>
		<servlet-name>community</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/classes/community-servlet.xml</param-value>
		</init-param>
		<load-on-startup>2</load-on-startup>
	</servlet>

	<!--
	==========================================================================
		Servlet Mappings
	========================================================================== -->

	<!-- Spring Dispatcher Servlet Mapping -->	
	<servlet-mapping>
		<servlet-name>community</servlet-name>
		<url-pattern>/community/*</url-pattern>
	</servlet-mapping>

	<session-config>
		<session-timeout>10</session-timeout>
	</session-config>

	<login-config>
		<auth-method>BASIC</auth-method>
	</login-config>

	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
<!-- 	
    <resource-ref>
        <description>DB ConnectionPool</description>
        <res-ref-name>jdbc/CommunityDataSource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>
 -->
</web-app>
	