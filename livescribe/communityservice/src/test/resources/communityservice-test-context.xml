<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.0.3.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<import resource="classpath:communityservice-context.xml" />
	<import resource="classpath:configuration/local/bean.xml" />
	
	<bean id="communityProperties"	class="com.livescribe.community.config.CommunityProperties">
		<property name="locations">
			<list>
				<value>classpath:configuration/test/community.properties</value>
			</list>
		</property>
	</bean>

<!--	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">-->
<!--		<property name="driverClass"><value>org.hsqldb.jdbcDriver</value></property>-->
<!--		<property name="url">-->
<!-- 			<value>jdbc:hsqldb:file:/Users/kmurdoff/wkspc/communityservice/target/test-classes/testdb</value>-->
<!--		</property>-->
<!--		<property name="username"><value>sa</value></property>-->
<!--		<property name="password"><value></value></property>-->
<!--	</bean>-->

<!--	<bean id="testDataSource" name="testDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">-->
<!--		<property name="jdbcUrl"><value>jdbc:hsqldb:file:/Users/kmurdoff/wkspc/communityservice/target/test-classes/testdb</value></property>-->
<!--		<property name="jdbcUrl"><value>jdbc:hsqldb:mem:testdb</value></property>-->
<!--		<property name="user"><value>sa</value></property>-->
<!--		<property name="password"><value></value></property>-->
<!--	</bean>-->

<!--	<bean id="testLoginDataSource" name="testLoginDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">-->
<!--		<property name="jdbcUrl"><value>jdbc:hsqldb:file:/Users/kmurdoff/wkspc/communityservice/target/test-classes/testdb</value></property>-->
<!--		<property name="jdbcUrl"><value>jdbc:hsqldb:mem:testdb</value></property>-->
<!--		<property name="user"><value>sa</value></property>-->
<!--		<property name="password"><value></value></property>-->
<!--	</bean>-->

<!--	<bean name="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">-->
<!-- 		<property name="dataSource" ref="consumerDatasource" /> -->
<!--		<property name="dataSource" ref="testDataSource" />-->
<!--	</bean>-->

	<bean id="testDataSource" name="testDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="jdbcUrl">
			<value>jdbc:frontbase://db.livescribe.com/qa.consumer/isolation=read_committed/locking=deferred/readonly=false/</value>
		</property>
		<property name="user"><value>_system</value></property>
		<property name="password"><value></value></property>
	</bean>

	<bean id="testLoginDataSource" name="testLoginDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="jdbcUrl">
			<value>jdbc:frontbase://db.livescribe.com/qa.consumer.login/isolation=read_committed/locking=deferred/readonly=false/</value>
		</property>
		<property name="user"><value>_system</value></property>
		<property name="password"><value></value></property>
	</bean>

	<bean id="testSessionFactory" name="testSessionFactory" class="com.livescribe.utils.hibernate.LSSessionFactoryBean">
		<constructor-arg type="java.lang.String"><value>testDataSource</value></constructor-arg>
		<property name="dataSource"><ref local="testDataSource" /></property>
        <property name="mappingResources">
			<list>
				<value>com/livescribe/community/orm/Country.hbm.xml</value>
				<value>com/livescribe/community/orm/UGComment.hbm.xml</value>
		        <value>com/livescribe/community/orm/UGCategory.hbm.xml</value>
				<value>com/livescribe/community/orm/UGFile.hbm.xml</value>
				<value>com/livescribe/community/orm/UserProfile.hbm.xml</value>
				<value>com/livescribe/community/dao/NamedQueries.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties" ref="testHibernateProperties" />
	</bean>

	<bean id="testLoginSessionFactory" name="testLoginSessionFactory" class="com.livescribe.utils.hibernate.LSSessionFactoryBean">
		<constructor-arg type="java.lang.String"><value>testLoginDataSource</value></constructor-arg>
		<property name="dataSource"><ref local="testLoginDataSource" /></property>
        <property name="mappingResources">
			<list>
				<value>com/livescribe/community/orm/ActiveUser.hbm.xml</value>
				<value>com/livescribe/community/dao/NamedQueries.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties" ref="testHibernateProperties" />
	</bean>

	<bean id="testHibernateProperties" name="testHibernateProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
     	<property name="properties">
       		<props>
        	<prop key="hibernate.dialect">org.hibernate.dialect.FrontBaseDialect</prop>
       		<prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory</prop> 
       		<prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>
       		<prop key="hibernate.connection.isolation">2</prop>
			<prop key="hibernate.connection.locking">deferred</prop>
			<prop key="hibernate.connection.readonly">true</prop>
       		<prop key="hibernate.show_sql">false</prop>
			<prop key="hibernate.c3p0.acquire_increment">3</prop>
       		<prop key="hibernate.c3p0.timeout">1800</prop>
       		<prop key="hibernate.c3p0.max_size">20</prop>
       		<prop key="hibernate.c3p0.max_statements">50</prop>
       		<prop key="hibernate.c3p0.min_size">5</prop>
       		<prop key="hibernate.connection.provider_class">org.hibernate.connection.C3P0ConnectionProvider</prop>
       		</props>
       	</property>
	</bean>
	
<!--	<bean id="testHibernateProperties" name="testHibernateProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">-->
<!--     	<property name="properties">-->
<!--       		<props>-->
<!--				<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>-->
<!--				<prop key="connection.driver_class">org.hsqldb.jdbcDriver</prop>-->
<!--				<prop key="connection.autocommit">true</prop>-->
<!--				<prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory</prop> -->
<!--				<prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>-->
<!--				<prop key="hibernate.connection.isolation">2</prop>-->
<!--				<prop key="hibernate.connection.locking">deferred</prop>-->
<!--				<prop key="hibernate.connection.readonly">false</prop>-->
<!--				<prop key="hibernate.show_sql">true</prop>-->
<!--				<prop key="hibernate.hbm2ddl.auto">create-drop</prop>-->
<!--				<prop key="hibernate.c3p0.acquire_increment">3</prop>-->
<!--				<prop key="hibernate.c3p0.timeout">1800</prop>-->
<!--				<prop key="hibernate.c3p0.max_size">20</prop>-->
<!--				<prop key="hibernate.c3p0.max_statements">50</prop>-->
<!--				<prop key="hibernate.c3p0.min_size">5</prop>-->
<!--				<prop key="hibernate.connection.provider_class">org.hibernate.connection.C3P0ConnectionProvider</prop>-->
<!--       		</props>-->
<!--       	</property>-->
<!--	</bean>-->
	
	<!-- Transaction management -->
    <bean id="testTransactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager" lazy-init="false">
<!--	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager" lazy-init="false">-->
		<property name="sessionFactory">
			<ref local="testSessionFactory" />
		</property>
	</bean>

<!--	<bean id="solrDao"			class="com.livescribe.community.dao.SolrDao" />-->

</beans>
